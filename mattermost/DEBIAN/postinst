#!/usr/bin/env bash

TRUE_REG='^([tT][rR][uU][eE]|[yY]|[yY][eE][sS]|1)$'
FALSE_REG='^([fF][aA][lL][sS][eE]|[nN]|[nN][oO]|0)$'
IS_UPGRADE=false

IS_DEBUG=${IS_DEBUG:-false}
if [[ $IS_DEBUG =~ $TRUE_REG ]]; then
    set -o xtrace
fi

IS_STRICT=${IS_STRICT:-false}
if [[ $IS_STRICT =~ $TRUE_REG ]]; then
    set -o errexit
    set -o nounset
    set -o pipefail
fi

case "$1" in
    configure)

    MATTERMOST_USER=${MATTERMOST_USER:-mattermost}
    MATTERMOST_GROUP=${MATTERMOST_GROUP:-mattermost}
    if ! getent group "$MATTERMOST_GROUP" > /dev/null 2>&1 ; then
       addgroup --system "$MATTERMOST_GROUP" --quiet > /dev/null 2>&1
    fi
    if ! id $MATTERMOST_USER > /dev/null 2>&1 ; then
       adduser --system --home /opt/mattermost --no-create-home \
       --ingroup "$MATTERMOST_GROUP" --disabled-password --shell /bin/false \
       "$MATTERMOST_USER" > /dev/null 2>&1
    fi

    # Set user permisssions on /opt/mattermost
    chown -R $MATTERMOST_USER:$MATTERMOST_GROUP /opt/mattermost

    # If $1=configure and $2 is set, this is an upgrade
    if [ "$2" != "" ]; then
        IS_UPGRADE=true
    fi

    if [[ ! "$IS_UPGRADE" =~ $TRUE_REG ]]; then
        systemctl daemon-reload
        systemctl enable mattermost
    else
        systemctl daemon-reload
        systemctl start mattermost > /dev/null 2>&1
    fi
    ;;
esac

exit 0
